AWSTemplateFormatVersion: "2010-09-09"
Description: AWS CodePipeline for Node Builds
Parameters:
  GitHubToken:
    NoEcho: true
    Type: String
    Description: Github Token generated from
  GitHubRepoOwner:
    Type: String
    Description: Owner of the GitHub Repository
  GitHubRepoName:
    Type: String
    Description: Name of the GitHub Repository
  GitHubBranch:
    Type: String
    Description: Name of branch to use inside the GitHub Repository
    Default: master
  S3ArtifactStore:
    Type: String
    Description: S3 Bucket where artifacts will be stored
  EC2KeyName:
    Type: String
    Description: Existing KeyName for EC2 instance
Resources:
  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - "arn:aws:logs:*:*:log-group:/aws/codebuild/*"
              -
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource: "arn:aws:s3:::codepipeline-*/*"

  TestCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ '-' , [ !Ref GitHubRepoName, !Ref GitHubBranch, test ] ]
      Description: CodeBuild project for running Node tests
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Name: !Join [ '-' , [ !Ref GitHubRepoName, !Ref GitHubBranch, test ] ]
        Type: CODEPIPELINE
        Packaging: NONE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                nodejs: 10

            pre_build:
              commands:
                - npm install
                - npm install -g mocha
                - npm run lint
            build:
              commands:
                - echo Build started on `date`
                - echo Compiling the Node.js code
                - echo Running unit tests
                - npm test
            post_build:
              commands:
                - echo Build completed on `date`
      TimeoutInMinutes: 10
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0-1.12.0

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ '-' , [ !Ref GitHubRepoName, !Ref GitHubBranch ] ]
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Name: !Join [ '-' , [ !Ref GitHubRepoName, !Ref GitHubBranch ] ]
        Type: CODEPIPELINE
        Packaging: NONE
      Environment:
        Type: LINUX_CONTAINER
        # ComputeType options: BUILD_GENERAL1_SMALL, BUILD_GENERAL1_MEDIUM, BUILD_GENERAL1_LARGE
        ComputeType: BUILD_GENERAL1_SMALL
        # Run `aws codebuild list-curated-environment-images` for a complete list of images provided.
        Image: aws/codebuild/standard:2.0-1.12.0
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
