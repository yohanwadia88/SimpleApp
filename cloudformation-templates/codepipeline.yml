AWSTemplateFormatVersion: "2010-09-09"
Description: AWS CodePipeline for Node Builds
Parameters:
  GitHubToken:
    NoEcho: true
    Type: String
    Description: Github Token generated from
  GitHubRepoOwner:
    Type: String
    Description: Owner of the GitHub Repository
  GitHubRepoName:
    Type: String
    Description: Name of the GitHub Repository
  GitHubBranch:
    Type: String
    Description: Name of branch to use inside the GitHub Repository
    Default: master
  S3ArtifactStore:
    Type: String
    Description: S3 Bucket where artifacts will be stored
  EC2KeyName:
    Type: String
    Description: Existing KeyName for EC2 instance
Resources:

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref S3ArtifactStore

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: Allow
              Principal:
                Service:
                  - "codepipeline.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Path: "/"
        Policies:
          -
            PolicyName: CodePipelinePolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: Allow
                  Action:
                    - "s3:GetObject"
                    - "s3:GetObjectVersion"
                    - "s3:GetBucketVersioning"
                  Resource: "*"
                -
                  Effect: Allow
                  Action:
                    - "s3:PutObject"
                  Resource:
                    - "arn:aws:s3:::codepipeline*"
                    - "arn:aws:s3:::elasticbeanstalk*"
                -
                  Effect: Allow
                  Action:
                    - "codecommit:CancelUploadArchive"
                    - "codecommit:GetBranch"
                    - "codecommit:GetCommit"
                    - "codecommit:GetUploadArchiveStatus"
                    - "codecommit:UploadArchive"
                  Resource: "*"
                -
                  Effect: Allow
                  Action:
                    - "codedeploy:CreateDeployment"
                    - "codedeploy:GetApplicationRevision"
                    - "codedeploy:GetDeployment"
                    - "codedeploy:GetDeploymentConfig"
                    - "codedeploy:RegisterApplicationRevision"
                  Resource: "*"
                -
                  Effect: Allow
                  Action:
                    - "elasticbeanstalk:*"
                    - "ec2:*"
                    - "elasticloadbalancing:*"
                    - "autoscaling:*"
                    - "cloudwatch:*"
                    - "s3:*"
                    - "sns:*"
                    - "cloudformation:*"
                    - "rds:*"
                    - "sqs:*"
                    - "ecs:*"
                    - "iam:PassRole"
                  Resource: "*"
                -
                  Effect: Allow
                  Action:
                    - "lambda:InvokeFunction"
                    - "lambda:ListFunctions"
                  Resource: "*"
                -
                  Effect: Allow
                  Action:
                    - "opsworks:CreateDeployment"
                    - "opsworks:DescribeApps"
                    - "opsworks:DescribeCommands"
                    - "opsworks:DescribeDeployments"
                    - "opsworks:DescribeInstances"
                    - "opsworks:DescribeStacks"
                    - "opsworks:UpdateApp"
                    - "opsworks:UpdateStack"
                  Resource: "*"
                -
                  Effect: Allow
                  Action:
                    - "cloudformation:CreateStack"
                    - "cloudformation:DeleteStack"
                    - "cloudformation:DescribeStacks"
                    - "cloudformation:UpdateStack"
                    - "cloudformation:CreateChangeSet"
                    - "cloudformation:DeleteChangeSet"
                    - "cloudformation:DescribeChangeSet"
                    - "cloudformation:ExecuteChangeSet"
                    - "cloudformation:SetStackPolicy"
                    - "cloudformation:ValidateTemplate"
                    - "iam:PassRole"
                  Resource: "*"
                -
                  Effect: Allow
                  Action:
                    - "codebuild:BatchGetBuilds"
                    - "codebuild:StartBuild"
                  Resource: "*"

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Join [ '-' , [ !Ref GitHubRepoName, !Ref GitHubBranch ] ]
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: SourcetoEC2Action
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                -
                  Name: SourceCodeOutputArtifact
              Configuration:
                Owner: !Ref GitHubRepoOwner
                Repo: !Ref GitHubRepoName
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
        -
          Name: Test
          Actions:
            - Name: TesttoEC2Action
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceCodeOutputArtifact
              OutputArtifacts:
                - Name: TestOutputArtifact
              Configuration:
                ProjectName: !Join [ '-' , [ !Ref GitHubRepoName, !Ref GitHubBranch, test ] ]
              RunOrder: 1
        -
          Name: Build
          Actions:
            - Name: BuildtoEC2Action
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceCodeOutputArtifact
              OutputArtifacts:
                - Name: BuildOutputArtifact
              Configuration:
                ProjectName: !Join [ '-' , [ !Ref GitHubRepoName, !Ref GitHubBranch ] ]
              RunOrder: 1
        -
          Name: Deploy
          Actions:
            -
              Name: DeploytoEC2Action
              InputArtifacts:
              -
                Name: BuildOutputArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CodeDeploy
              Configuration:
                ApplicationName: !Join [ '-' , [ !Ref GitHubRepoName, !Ref GitHubBranch ] ]
                DeploymentGroupName: !Join [ '-' , [ !Ref GitHubRepoName, !Ref GitHubBranch ] ]
              RunOrder: 1

      ArtifactStore:
        Type: S3
        Location: !Ref S3ArtifactStore
